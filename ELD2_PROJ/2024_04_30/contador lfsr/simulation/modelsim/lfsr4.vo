// Copyright (C) 2020  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 20.1.1 Build 720 11/11/2020 SJ Standard Edition"

// DATE "04/30/2024 11:22:33"

// 
// Device: Altera EP4CE115F29I7 Package FBGA780
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module lfsr4 (
	clk,
	reset,
	q);
input 	clk;
input 	reset;
output 	[3:0] q;

// Design Ports Information
// q[0]	=>  Location: PIN_U3,	 I/O Standard: 2.5 V,	 Current Strength: Default
// q[1]	=>  Location: PIN_U4,	 I/O Standard: 2.5 V,	 Current Strength: Default
// q[2]	=>  Location: PIN_R3,	 I/O Standard: 2.5 V,	 Current Strength: Default
// q[3]	=>  Location: PIN_R6,	 I/O Standard: 2.5 V,	 Current Strength: Default
// clk	=>  Location: PIN_J1,	 I/O Standard: 2.5 V,	 Current Strength: Default
// reset	=>  Location: PIN_Y2,	 I/O Standard: 2.5 V,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \q[0]~output_o ;
wire \q[1]~output_o ;
wire \q[2]~output_o ;
wire \q[3]~output_o ;
wire \clk~input_o ;
wire \clk~inputclkctrl_outclk ;
wire \fzero~combout ;
wire \reset~input_o ;
wire \reset~inputclkctrl_outclk ;
wire \r_reg[2]~feeder_combout ;
wire \r_reg[1]~feeder_combout ;
wire \r_reg[0]~feeder_combout ;
wire [3:0] r_reg;


hard_block auto_generated_inst(
	.devpor(devpor),
	.devclrn(devclrn),
	.devoe(devoe));

// Location: IOOBUF_X0_Y34_N9
cycloneive_io_obuf \q[0]~output (
	.i(r_reg[0]),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\q[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \q[0]~output .bus_hold = "false";
defparam \q[0]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X0_Y34_N16
cycloneive_io_obuf \q[1]~output (
	.i(r_reg[1]),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\q[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \q[1]~output .bus_hold = "false";
defparam \q[1]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X0_Y34_N23
cycloneive_io_obuf \q[2]~output (
	.i(r_reg[2]),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\q[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \q[2]~output .bus_hold = "false";
defparam \q[2]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X0_Y34_N2
cycloneive_io_obuf \q[3]~output (
	.i(r_reg[3]),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\q[3]~output_o ),
	.obar());
// synopsys translate_off
defparam \q[3]~output .bus_hold = "false";
defparam \q[3]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOIBUF_X0_Y36_N8
cycloneive_io_ibuf \clk~input (
	.i(clk),
	.ibar(gnd),
	.o(\clk~input_o ));
// synopsys translate_off
defparam \clk~input .bus_hold = "false";
defparam \clk~input .simulate_z_as = "z";
// synopsys translate_on

// Location: CLKCTRL_G2
cycloneive_clkctrl \clk~inputclkctrl (
	.ena(vcc),
	.inclk({vcc,vcc,vcc,\clk~input_o }),
	.clkselect(2'b00),
	.devclrn(devclrn),
	.devpor(devpor),
	.outclk(\clk~inputclkctrl_outclk ));
// synopsys translate_off
defparam \clk~inputclkctrl .clock_type = "global clock";
defparam \clk~inputclkctrl .ena_register_mode = "none";
// synopsys translate_on

// Location: LCCOMB_X1_Y34_N2
cycloneive_lcell_comb fzero(
// Equation(s):
// \fzero~combout  = r_reg[0] $ (((r_reg[1]) # ((!r_reg[2] & !r_reg[3]))))

	.dataa(r_reg[2]),
	.datab(r_reg[0]),
	.datac(r_reg[3]),
	.datad(r_reg[1]),
	.cin(gnd),
	.combout(\fzero~combout ),
	.cout());
// synopsys translate_off
defparam fzero.lut_mask = 16'h33C9;
defparam fzero.sum_lutc_input = "datac";
// synopsys translate_on

// Location: IOIBUF_X0_Y36_N15
cycloneive_io_ibuf \reset~input (
	.i(reset),
	.ibar(gnd),
	.o(\reset~input_o ));
// synopsys translate_off
defparam \reset~input .bus_hold = "false";
defparam \reset~input .simulate_z_as = "z";
// synopsys translate_on

// Location: CLKCTRL_G4
cycloneive_clkctrl \reset~inputclkctrl (
	.ena(vcc),
	.inclk({vcc,vcc,vcc,\reset~input_o }),
	.clkselect(2'b00),
	.devclrn(devclrn),
	.devpor(devpor),
	.outclk(\reset~inputclkctrl_outclk ));
// synopsys translate_off
defparam \reset~inputclkctrl .clock_type = "global clock";
defparam \reset~inputclkctrl .ena_register_mode = "none";
// synopsys translate_on

// Location: FF_X1_Y34_N3
dffeas \r_reg[3] (
	.clk(\clk~inputclkctrl_outclk ),
	.d(\fzero~combout ),
	.asdata(vcc),
	.clrn(!\reset~inputclkctrl_outclk ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(r_reg[3]),
	.prn(vcc));
// synopsys translate_off
defparam \r_reg[3] .is_wysiwyg = "true";
defparam \r_reg[3] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X1_Y34_N12
cycloneive_lcell_comb \r_reg[2]~feeder (
// Equation(s):
// \r_reg[2]~feeder_combout  = r_reg[3]

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(r_reg[3]),
	.cin(gnd),
	.combout(\r_reg[2]~feeder_combout ),
	.cout());
// synopsys translate_off
defparam \r_reg[2]~feeder .lut_mask = 16'hFF00;
defparam \r_reg[2]~feeder .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X1_Y34_N13
dffeas \r_reg[2] (
	.clk(\clk~inputclkctrl_outclk ),
	.d(\r_reg[2]~feeder_combout ),
	.asdata(vcc),
	.clrn(!\reset~inputclkctrl_outclk ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(r_reg[2]),
	.prn(vcc));
// synopsys translate_off
defparam \r_reg[2] .is_wysiwyg = "true";
defparam \r_reg[2] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X1_Y34_N6
cycloneive_lcell_comb \r_reg[1]~feeder (
// Equation(s):
// \r_reg[1]~feeder_combout  = r_reg[2]

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(r_reg[2]),
	.cin(gnd),
	.combout(\r_reg[1]~feeder_combout ),
	.cout());
// synopsys translate_off
defparam \r_reg[1]~feeder .lut_mask = 16'hFF00;
defparam \r_reg[1]~feeder .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X1_Y34_N7
dffeas \r_reg[1] (
	.clk(\clk~inputclkctrl_outclk ),
	.d(\r_reg[1]~feeder_combout ),
	.asdata(vcc),
	.clrn(!\reset~inputclkctrl_outclk ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(r_reg[1]),
	.prn(vcc));
// synopsys translate_off
defparam \r_reg[1] .is_wysiwyg = "true";
defparam \r_reg[1] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X1_Y34_N28
cycloneive_lcell_comb \r_reg[0]~feeder (
// Equation(s):
// \r_reg[0]~feeder_combout  = r_reg[1]

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(r_reg[1]),
	.cin(gnd),
	.combout(\r_reg[0]~feeder_combout ),
	.cout());
// synopsys translate_off
defparam \r_reg[0]~feeder .lut_mask = 16'hFF00;
defparam \r_reg[0]~feeder .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X1_Y34_N29
dffeas \r_reg[0] (
	.clk(\clk~inputclkctrl_outclk ),
	.d(\r_reg[0]~feeder_combout ),
	.asdata(vcc),
	.clrn(!\reset~inputclkctrl_outclk ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(r_reg[0]),
	.prn(vcc));
// synopsys translate_off
defparam \r_reg[0] .is_wysiwyg = "true";
defparam \r_reg[0] .power_up = "low";
// synopsys translate_on

assign q[0] = \q[0]~output_o ;

assign q[1] = \q[1]~output_o ;

assign q[2] = \q[2]~output_o ;

assign q[3] = \q[3]~output_o ;

endmodule

module hard_block (

	devpor,
	devclrn,
	devoe);

// Design Ports Information
// ~ALTERA_ASDO_DATA1~	=>  Location: PIN_F4,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_FLASH_nCE_nCSO~	=>  Location: PIN_E2,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_DCLK~	=>  Location: PIN_P3,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_DATA0~	=>  Location: PIN_N7,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_nCEO~	=>  Location: PIN_P28,	 I/O Standard: 2.5 V,	 Current Strength: 8mA

input 	devpor;
input 	devclrn;
input 	devoe;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

wire \~ALTERA_ASDO_DATA1~~padout ;
wire \~ALTERA_FLASH_nCE_nCSO~~padout ;
wire \~ALTERA_DATA0~~padout ;
wire \~ALTERA_ASDO_DATA1~~ibuf_o ;
wire \~ALTERA_FLASH_nCE_nCSO~~ibuf_o ;
wire \~ALTERA_DATA0~~ibuf_o ;


endmodule
